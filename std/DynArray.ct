class DynArray<T, N, F> {

    Array<T, N, F> array;
    F length;

    Self new() {
        return Self {
            array = Array tmp,
            length = 0
        };
    }
    
    Self from<Number>(Array<T, Number, F> input) {
        Self dyn = Self.new();
        dyn.addAll<Number>(input);
        return dyn;
    }

    add(Self self, T t) {
        self.array.setDyn(self.length, t);
        self.length.inc();
    }

    addAll<Ng>(Self self, Array<T, Ng, F> arr) {
        F l = arr.len();
        F c = 0;
        loop {
            if l.equalsZero() {
                break;
            };
            self.add(arr.getDyn(c));
            c.inc();
            l.dec();
        };
    }

    T pop(Self self) {
        self.length.dec();
        return self.getDyn(self.length);
    }

    Array<T, N, F> raw(Self self) {
        return self.array;
    }

    F len(Self self) {
        return self.length;
    }

    F capacity(Self self) {
        return self.array.len();
    }

    last(Self self, F pos) {
        F k = self.len();
        k.dec();
        return self.getDyn(k);
    }

    setDyn(Self self, F pos, T t) {
        self.array.setDyn(pos,t);
    }

    set<Number>(Self self,T t) {
        self.set<Number>(t);
    }

    T getDyn(Self self, F pos) {
        return self.array.getDyn(pos);
    }

    T get<Number>(Self self) {
        return self.array.get<Number>();
    }
    
    print(Self<Byte, N> self) {
        F index = self.len();
        loop {
            index.dec();
            self.getDyn(index).print();
            if index.equalsZero() {
                break;
            };
        };
    }
    println(Self<Byte, N, F> self) {
        F index = 0;
        loop {
            if self.len().greater(index) {
                self.getDyn(index).print();
                index.inc();
            } else {
                break;
            };
        };
        '\n'.print();
    }

    Bool contains(Self self, T t) {
        F size = self.len();
        loop {
            if size.equalsZero() {
                return false;
            };
            size.dec();
            if self.getDyn(size).equals(t) {
                return true;
            } 
        };
    }
}