class Byte {
    Val lower;
    Val higher;

    Byte new(Byte a) {
        return Byte {
            lower = a.lower,
            higher = a.higher
        };
    }

    printDec(Byte self) {
        Val lower = self.lower;
        Val higher = self.higher;
        if (lower.greater(9)) {
            lower.sub(10);
            lower.printDec();
            higher.inc();
        } else {
            lower.printDec();
        };
        if (higher.greater(9)) {
            higher.sub(10);
            higher.printDec();
            '1'.print();
        } else {
            higher.printDec();
        };
    }

    sub(Byte self, Byte other) {
        Byte u = other;
        loop {
            if u.equalsZero() {
                break;
            };
            self.dec();
            u.dec();
        }
    }

    add(Byte self, Byte other) {
        Byte u = other;
        loop {
            if u.equalsZero() {
                break;
            };
            self.inc();
            u.dec();
        }
    }

    inc(Byte self) {
        self.lower.inc();
        if self.lower.equalsZero() {
            self.higher.inc();
        }
    }

    dec(Byte self) {
        if self.lower.equalsZero() {
            self.higher.dec();
        };
        self.lower.dec();
    }

    Byte fromValAsNumber(Val a) {
        return Byte {
            lower = a,
            higher = 3
        };
    }

    Byte fromVal(Val a) {
        return Byte {
            lower = a,
            higher = 0
        };
    }

    Byte input() {
        System.setRegister<0>(2);
        return Byte {
            lower = System.getRegister<2>(),
            higher = System.getRegister<1>()
        };
    }

    print(Byte self) {
        System.setRegister<2>(self.lower);
        System.setRegister<1>(self.higher);
        System.setRegister<0>(1);
    }

    Bool equals(Byte self, Byte other) {
        return self.lower.equals(other.lower) && self.higher.equals(other.higher);
    }

    Bool equalsZero(Byte self) {
        if self.lower as Bool {
            if self.higher as Bool {
                return Bool.true();
            } else {
                return Bool.false();
            }
        } else {
            return Bool.false();
        }
    }
}