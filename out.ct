'start
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # you can test number from 0 to 16
# Default pointers
'#0:16
'#1:1
'#2:2
'#3:3
'#4:4
'#5:5
'#6:6
'#7:7
'#8:8
'#9:9
'#10:10
'#11:11
'#12:12
'#13:13
'#14:14
'#15:15
'#null:0

# delimiter for compiled version (to see the result better)
7070
# return value from functions

'#return_0:0
'#return_1:0
'#return_2:0
'#return_3:0
'#return_4:0
'#return_5:0
'#return_6:0
'#return_7:0
'#return_8:0
'#return_9:0
'#return_A:0
'#return_B:0
'#return_C:0
'#return_D:0
'#return_E:0
'#return_F:0

7070


no_op = (1 1)
earasable = (999)

stop = (~+2 0 ~-2) # Stop the program

# jump to self.0
jump {~+2 0 self.0}

# self.0 = 'code 
exit {
    self.0 '#return_0 stop
}

# self.0 : '[0-F]
# increment value at self.0
inc {
    self.0 'test
    '#15 14
    '#14 13
    '#13 12
    '#12 11
    '#11 10
    '#10 9
    '#9 8
    '#8 7
    '#7 6
    '#6 5
    '#5 4
    '#4 3
    '#3 2
    '#2 1
    '#1 16
    '#0 15
    'test:earasable self.0
}

# self.0 : '[0-F]
# decrement value at self.0
dec {
    self.0 'test
    '#15 16
    '#14 15
    '#13 14
    '#12 13
    '#11 12
    '#10 11
    '#9 10
    '#8 9
    '#7 8
    '#6 7
    '#5 6
    '#4 5
    '#3 4
    '#2 3
    '#1 2
    '#0 1
    'test:earasable self.0
}

# self.0 : '[0-F]
# jump to self.1 if self.0 is 0 
if_0 {
    self.0 'test
    'pt 16
    'end 15
    'end 14
    'end 13
    'end 12
    'end 11
    'end 10
    'end 9
    'end 8
    'end 7
    'end 6
    'end 5
    'end 4
    'end 3
    'end 2
    'end 1
    'test:earasable 0
    jump('end1)
    'pt:self.1
    'end:~+1
    'end1:no_op
}

'v4:0
'v9:0
'v10:0
'v7:0
'v8:0
'v13:0
'v14:0
'v11:0
'v12:0
'v15:0
'v16:0
'v17:0
'v18:0
'v19:0
'v26:0
'v25:0
'v20:0
'v24:0
'v23:0
'v22:0
'v21:0
'v27:0
'v28:0
'v5:0
'v6:0
'v2:0
'v3:0
'v29:0
'v31:0
'v32:0
'v33:0
'v36:0
'v38:0
'v37:0
'v30:0
'v35:0
'v34:0
'v48:0
'v49:0
'v39:0
'v40:0
'v41:0
'v42:0
'v43:0
'v44:0
'v45:0
'v46:0
'v47:0
'v50:0
'v51:0
'v52:0
'v53:0
'v55:0
'v56:0
'v57:0
'v60:0
'v62:0
'v61:0
'v54:0
'v59:0
'v58:0
'v72:0
'v73:0
'v63:0
'v64:0
'v65:0
'v66:0
'v67:0
'v68:0
'v69:0
'v70:0
'v71:0
'v74:0
'v75:0
'v76:0



7070

'start:no_op

'#10 'v4
'#1 'v9
'#0 'v10
'#0 'v7
'#0 'v8
'v9 'v7
'v10 'v8
'#1 'v13
'#0 'v14
'#0 'v11
'#0 'v12
'v13 'v11
'v14 'v12
'lA1:no_op
'v4 'v15
if_0('v15 'lB1)
jump('lF2)
jump('lB1)
'lF2:no_op
'#0 'v16
'#0 'v17
'v7 'v16
'v8 'v17
'v11 'v7
'v12 'v8
'#0 'v18
'#0 'v19
'v11 'v18
'v12 'v19
'lA3:no_op
if_0('v18 'lD4)
'#1 'v26
'v26 'v25
'v25 'v20
jump('lF4)
'lD4:no_op
if_0('v19 'lD5)
'#1 'v24
'v24 'v23
'v23 'v20
jump('lF5)
'lD5:no_op
'#0 'v22
'v22 'v21
'v21 'v20
'lF5:no_op
'lF4:no_op
if_0('v20 'lB3)
jump('lF6)
jump('lB3)
'lF6:no_op
inc('v16)
'v16 'v27
if_0('v27 'lD7)
jump('lF7)
'lD7:no_op
inc('v17)
'lF7:no_op
'v18 'v28
if_0('v28 'lD8)
jump('lF8)
'lD8:no_op
dec('v19)
'lF8:no_op
dec('v18)
jump('lA3)
'lB3:no_op
'v16 'v11
'v17 'v12
dec('v4)
jump('lA1)
'lB1:no_op
'v11 'v5
'v12 'v6
'#0 'v2
'#0 'v3
'v5 'v2
'v6 'v3
'#9 'v29
'#0 'v31
'v2 'v31
'#0 'v32
'v29 'v32
'lA9:no_op
'v31 'v33
if_0('v33 'lD10)
'v32 'v36
if_0('v36 'lD11)
jump('lF10)
'lD11:no_op
'#0 'v38
'v38 'v37
'v37 'v30
jump('lB9)
jump('lF10)
'lD10:no_op
'#1 'v35
'v35 'v34
'v34 'v30
jump('lB9)
'lF10:no_op
dec('v31)
dec('v32)
jump('lA9)
'lB9:no_op
if_0('v30 'lD12)
'#3 'v48
'v48 '#return_1
'v2 '#return_2
'#1 'v49
'v49 '#return_0
jump('lF12)
'lD12:no_op
'#1 'v39
'#3 'v40
'v39 '#return_2
'v40 '#return_1
'#1 'v41
'v41 '#return_0
'#0 'v42
'v2 'v42
'#10 'v43
'#0 'v44
'v43 'v44
'lA13:no_op
'v43 'v45
if_0('v45 'lB13)
jump('lF14)
jump('lB13)
'lF14:no_op
dec('v42)
dec('v43)
jump('lA13)
'lB13:no_op
'#3 'v46
'v46 '#return_1
'v42 '#return_2
'#1 'v47
'v47 '#return_0
'lF12:no_op
'#12 'v50
'#2 'v51
'v50 '#return_2
'v51 '#return_1
'#1 'v52
'v52 '#return_0
'#9 'v53
'#0 'v55
'v3 'v55
'#0 'v56
'v53 'v56
'lA15:no_op
'v55 'v57
if_0('v57 'lD16)
'v56 'v60
if_0('v60 'lD17)
jump('lF16)
'lD17:no_op
'#0 'v62
'v62 'v61
'v61 'v54
jump('lB15)
jump('lF16)
'lD16:no_op
'#1 'v59
'v59 'v58
'v58 'v54
jump('lB15)
'lF16:no_op
dec('v55)
dec('v56)
jump('lA15)
'lB15:no_op
if_0('v54 'lD18)
'#3 'v72
'v72 '#return_1
'v3 '#return_2
'#1 'v73
'v73 '#return_0
jump('lF18)
'lD18:no_op
'#1 'v63
'#3 'v64
'v63 '#return_2
'v64 '#return_1
'#1 'v65
'v65 '#return_0
'#0 'v66
'v3 'v66
'#10 'v67
'#0 'v68
'v67 'v68
'lA19:no_op
'v67 'v69
if_0('v69 'lB19)
jump('lF20)
jump('lB19)
'lF20:no_op
dec('v66)
dec('v67)
jump('lA19)
'lB19:no_op
'#3 'v70
'v70 '#return_1
'v66 '#return_2
'#1 'v71
'v71 '#return_0
'lF18:no_op
'#10 'v74
'#0 'v75
'v74 '#return_2
'v75 '#return_1
'#1 'v76
'v76 '#return_0
stop

exit('#0)